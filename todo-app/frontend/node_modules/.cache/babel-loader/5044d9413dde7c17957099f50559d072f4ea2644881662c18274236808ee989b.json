{"ast":null,"code":"var _jsxFileName = \"D:\\\\To-Do-List-App\\\\todo-app\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  // Fetch tasks from your backend (replace with real API)\n  useEffect(() => {\n    // Simulate API call\n    const mockTasks = [{\n      id: 1,\n      title: 'Buy groceries',\n      completed: false\n    }, {\n      id: 2,\n      title: 'Finish project report',\n      completed: true\n    }];\n    setTasks(mockTasks);\n  }, []);\n  const handleAddTask = () => {\n    if (!newTask.trim()) return;\n    const newTaskObj = {\n      id: Date.now(),\n      title: newTask,\n      completed: false\n    };\n    setTasks([...tasks, newTaskObj]);\n    setNewTask('');\n  };\n  const handleToggleComplete = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleDelete = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDCDD My To-Do Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user === null || user === void 0 ? void 0 : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task...\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleToggleComplete(task.id),\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","tasks","setTasks","newTask","setNewTask","mockTasks","id","title","completed","handleAddTask","trim","newTaskObj","Date","now","handleToggleComplete","map","task","handleDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/To-Do-List-App/todo-app/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = ({ user, onLogout }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  // Fetch tasks from your backend (replace with real API)\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const mockTasks = [\r\n      { id: 1, title: 'Buy groceries', completed: false },\r\n      { id: 2, title: 'Finish project report', completed: true },\r\n    ];\r\n    setTasks(mockTasks);\r\n  }, []);\r\n\r\n  const handleAddTask = () => {\r\n    if (!newTask.trim()) return;\r\n    const newTaskObj = {\r\n      id: Date.now(),\r\n      title: newTask,\r\n      completed: false,\r\n    };\r\n    setTasks([...tasks, newTaskObj]);\r\n    setNewTask('');\r\n  };\r\n\r\n  const handleToggleComplete = (id) => {\r\n    setTasks(tasks.map(task =>\r\n      task.id === id ? { ...task, completed: !task.completed } : task\r\n    ));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>üìù My To-Do Dashboard</h1>\r\n        <div className=\"user-section\">\r\n          <span>Welcome, <strong>{user?.name}</strong></span>\r\n          <button onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task...\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={handleAddTask}>Add</button>\r\n      </div>\r\n\r\n      <div className=\"filters\">\r\n        <button>All</button>\r\n        <button>Active</button>\r\n        <button>Completed</button>\r\n      </div>\r\n\r\n      <ul className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className={task.completed ? 'completed' : ''}>\r\n            <span onClick={() => handleToggleComplete(task.id)}>\r\n              {task.title}\r\n            </span>\r\n            <button onClick={() => handleDelete(task.id)}>‚ùå</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}