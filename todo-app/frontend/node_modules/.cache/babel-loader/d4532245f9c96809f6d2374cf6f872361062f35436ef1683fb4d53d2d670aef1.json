{"ast":null,"code":"var _jsxFileName = \"D:\\\\To-Do-List-App\\\\todo-app\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Dashboard.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport \"../styles/Dashboard.css\";\nimport { FaUserCircle, FaBell, FaSearch, FaPlus, FaSignOutAlt } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todayIso = (d = new Date()) => new Date(d.getFullYear(), d.getMonth(), d.getDate()).toISOString().slice(0, 10);\nconst priorityOrder = {\n  High: 0,\n  Medium: 1,\n  Low: 2\n};\nconst Dashboard = ({\n  userId,\n  username = \"guest\",\n  onLogout = () => {}\n}) => {\n  _s();\n  // Data\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  // UI states\n  const [query, setQuery] = useState(\"\");\n  const [filterProject, setFilterProject] = useState(\"All\");\n  const [filterPriority, setFilterPriority] = useState(\"All\");\n  const [sortBy, setSortBy] = useState(\"deadline\");\n  const [showOnly, setShowOnly] = useState(\"all\");\n  const [expanded, setExpanded] = useState(new Set());\n  const [notifications, setNotifications] = useState([]);\n  const [quickAddTitle, setQuickAddTitle] = useState(\"\");\n  const [quickAddDeadline, setQuickAddDeadline] = useState(\"\");\n  const [quickAddPriority, setQuickAddPriority] = useState(\"Medium\");\n  const [quickAddProject, setQuickAddProject] = useState(\"\");\n  const [todayStr, setTodayStr] = useState(todayIso());\n\n  // Fetch user & tasks from backend\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        // Adjust API endpoint to your backend\n        const res = await axios.get(`http://localhost:5000/api/user/${username}`);\n        setUser(res.data);\n      } catch (err) {\n        console.error(\"Error fetching user:\", err);\n        setUser({\n          name: username,\n          avatarUrl: null\n        });\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/tasks?userId=${userId}`);\n        setTasks(res.data);\n        const proj = [\"All\", ...new Set(res.data.map(t => t.project || \"General\"))];\n        setProjects(proj);\n      } catch (err) {\n        console.error(\"Error fetching tasks:\", err);\n        setTasks([]);\n        setProjects([\"All\"]);\n      }\n    };\n    fetchUser();\n    fetchTasks();\n    const timer = setInterval(() => setTodayStr(todayIso()), 60000);\n    return () => clearInterval(timer);\n  }, [username, userId]);\n\n  // Derived values\n  const counts = useMemo(() => {\n    const total = tasks.length;\n    const completed = tasks.filter(t => t.completed).length;\n    const pending = total - completed;\n    return {\n      total,\n      completed,\n      pending\n    };\n  }, [tasks]);\n  const dueToday = useMemo(() => tasks.filter(t => t.deadline === todayStr && !t.completed), [tasks, todayStr]);\n  const overdue = useMemo(() => tasks.filter(t => t.deadline < todayStr && !t.completed), [tasks, todayStr]);\n  const upcoming7 = useMemo(() => {\n    const now = new Date(todayStr);\n    const end = new Date(now);\n    end.setDate(end.getDate() + 7);\n    return tasks.filter(t => {\n      const dd = new Date(t.deadline);\n      return dd >= now && dd <= end && !t.completed && t.deadline !== todayStr;\n    });\n  }, [tasks, todayStr]);\n\n  // Notifications generation\n  useEffect(() => {\n    const nots = [];\n    tasks.forEach(t => {\n      if (!t.completed) {\n        const d = new Date(t.deadline);\n        const diff = (d - new Date(todayStr)) / (1000 * 60 * 60 * 24);\n        if (diff < 0) nots.push({\n          id: `ov-${t._id}`,\n          msg: `Overdue: ${t.title}`,\n          taskId: t._id,\n          level: \"overdue\"\n        });else if (diff <= 2) nots.push({\n          id: `up-${t._id}`,\n          msg: `Due soon: ${t.title} (${t.deadline})`,\n          taskId: t._id,\n          level: \"soon\"\n        });\n      }\n    });\n    setNotifications(nots);\n  }, [tasks, todayStr]);\n\n  // Filtering / Searching / Sorting\n  const visibleTasks = useMemo(() => {\n    let list = tasks.slice();\n    if (filterProject && filterProject !== \"All\") list = list.filter(t => t.project === filterProject);\n    if (filterPriority && filterPriority !== \"All\") list = list.filter(t => t.priority === filterPriority);\n    if (showOnly === \"overdue\") list = list.filter(t => t.deadline < todayStr && !t.completed);\n    if (showOnly === \"dueToday\") list = list.filter(t => t.deadline === todayStr);\n    if (showOnly === \"upcoming7\") {\n      const now = new Date(todayStr);\n      const end = new Date(now);\n      end.setDate(end.getDate() + 7);\n      list = list.filter(t => {\n        const dd = new Date(t.deadline);\n        return dd >= now && dd <= end;\n      });\n    }\n    if (query && query.trim()) {\n      const q = query.toLowerCase();\n      list = list.filter(t => t.title.toLowerCase().includes(q) || (t.description || \"\").toLowerCase().includes(q) || (t.tags || []).join(\" \").toLowerCase().includes(q));\n    }\n\n    // sort\n    if (sortBy === \"deadline\") {\n      list.sort((a, b) => (a.deadline || \"\").localeCompare(b.deadline || \"\"));\n    } else if (sortBy === \"priority\") {\n      list.sort((a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]);\n    } else if (sortBy === \"created\") {\n      list.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    }\n    return list;\n  }, [tasks, filterProject, filterPriority, sortBy, showOnly, query, todayStr]);\n\n  // Action handlers\n  const toggleComplete = async id => {\n    try {\n      const task = tasks.find(t => t._id === id);\n      const updated = {\n        ...task,\n        completed: !task.completed\n      };\n      await axios.put(`http://localhost:5000/api/tasks/${id}`, updated);\n      setTasks(prev => prev.map(t => t._id === id ? {\n        ...t,\n        completed: !t.completed\n      } : t));\n    } catch (err) {\n      console.error(\"Error toggling complete:\", err);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n      setTasks(prev => prev.filter(t => t._id !== id));\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n    }\n  };\n  const updateTask = async (id, patch) => {\n    try {\n      const res = await axios.put(`http://localhost:5000/api/tasks/${id}`, patch);\n      setTasks(prev => prev.map(t => t._id === id ? {\n        ...t,\n        ...res.data\n      } : t));\n    } catch (err) {\n      console.error(\"Error updating task:\", err);\n    }\n  };\n  const addTask = async () => {\n    if (!quickAddTitle.trim()) return;\n    try {\n      const newTask = {\n        title: quickAddTitle,\n        description: \"\",\n        deadline: quickAddDeadline || null,\n        priority: quickAddPriority,\n        tags: [],\n        project: quickAddProject || \"General\",\n        completed: false,\n        userId // important\n      };\n      const res = await axios.post(\"http://localhost:5000/api/tasks\", newTask);\n      setTasks(prev => [res.data, ...prev]);\n      if (quickAddProject && !projects.includes(quickAddProject)) setProjects(prev => [...prev, quickAddProject]);\n      setQuickAddTitle(\"\");\n      setQuickAddDeadline(\"\");\n      setQuickAddPriority(\"Medium\");\n      setQuickAddProject(\"\");\n    } catch (err) {\n      console.error(\"Error adding task:\", err);\n    }\n  };\n  const toggleExpand = id => {\n    setExpanded(prev => {\n      const copy = new Set(prev);\n      if (copy.has(id)) copy.delete(id);else copy.add(id);\n      return copy;\n    });\n  };\n  const snoozeNotification = (nid, days = 1) => {\n    const not = notifications.find(n => n.id === nid);\n    if (!not) return;\n    const tId = not.taskId;\n    updateTask(tId, {\n      deadline: new Date(new Date(tasks.find(t => t._id === tId).deadline || todayStr).setDate(new Date(tasks.find(t => t._id === tId).deadline || todayStr).getDate() + days)).toISOString().slice(0, 10)\n    });\n    setNotifications(prev => prev.filter(n => n.id !== nid));\n  };\n  const dismissNotification = nid => setNotifications(prev => prev.filter(n => n.id !== nid));\n  const progressPercent = counts.total ? Math.round(counts.completed / counts.total * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-wrap\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+G3nqLpD8070F7ptJrVNnmRXcQ4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","FaUserCircle","FaBell","FaSearch","FaPlus","FaSignOutAlt","axios","jsxDEV","_jsxDEV","todayIso","d","Date","getFullYear","getMonth","getDate","toISOString","slice","priorityOrder","High","Medium","Low","Dashboard","userId","username","onLogout","_s","user","setUser","tasks","setTasks","projects","setProjects","query","setQuery","filterProject","setFilterProject","filterPriority","setFilterPriority","sortBy","setSortBy","showOnly","setShowOnly","expanded","setExpanded","Set","notifications","setNotifications","quickAddTitle","setQuickAddTitle","quickAddDeadline","setQuickAddDeadline","quickAddPriority","setQuickAddPriority","quickAddProject","setQuickAddProject","todayStr","setTodayStr","fetchUser","res","get","data","err","console","error","name","avatarUrl","fetchTasks","proj","map","t","project","timer","setInterval","clearInterval","counts","total","length","completed","filter","pending","dueToday","deadline","overdue","upcoming7","now","end","setDate","dd","nots","forEach","diff","push","id","_id","msg","title","taskId","level","visibleTasks","list","priority","trim","q","toLowerCase","includes","description","tags","join","sort","a","b","localeCompare","createdAt","toggleComplete","task","find","updated","put","prev","deleteTask","delete","updateTask","patch","addTask","newTask","post","toggleExpand","copy","has","add","snoozeNotification","nid","days","not","n","tId","dismissNotification","progressPercent","Math","round","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/To-Do-List-App/todo-app/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// Dashboard.jsx\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport \"../styles/Dashboard.css\";\r\nimport {\r\n  FaUserCircle,\r\n  FaBell,\r\n  FaSearch,\r\n  FaPlus,\r\n  FaSignOutAlt,\r\n} from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nconst todayIso = (d = new Date()) =>\r\n  new Date(d.getFullYear(), d.getMonth(), d.getDate())\r\n    .toISOString()\r\n    .slice(0, 10);\r\n\r\nconst priorityOrder = { High: 0, Medium: 1, Low: 2 };\r\n\r\nconst Dashboard = ({ userId, username = \"guest\", onLogout = () => {} }) => {\r\n  // Data\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  // UI states\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filterProject, setFilterProject] = useState(\"All\");\r\n  const [filterPriority, setFilterPriority] = useState(\"All\");\r\n  const [sortBy, setSortBy] = useState(\"deadline\");\r\n  const [showOnly, setShowOnly] = useState(\"all\");\r\n  const [expanded, setExpanded] = useState(new Set());\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [quickAddTitle, setQuickAddTitle] = useState(\"\");\r\n  const [quickAddDeadline, setQuickAddDeadline] = useState(\"\");\r\n  const [quickAddPriority, setQuickAddPriority] = useState(\"Medium\");\r\n  const [quickAddProject, setQuickAddProject] = useState(\"\");\r\n  const [todayStr, setTodayStr] = useState(todayIso());\r\n\r\n  // Fetch user & tasks from backend\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        // Adjust API endpoint to your backend\r\n        const res = await axios.get(`http://localhost:5000/api/user/${username}`);\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching user:\", err);\r\n        setUser({ name: username, avatarUrl: null });\r\n      }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `http://localhost:5000/api/tasks?userId=${userId}`\r\n        );\r\n        setTasks(res.data);\r\n        const proj = [\"All\", ...new Set(res.data.map((t) => t.project || \"General\"))];\r\n        setProjects(proj);\r\n      } catch (err) {\r\n        console.error(\"Error fetching tasks:\", err);\r\n        setTasks([]);\r\n        setProjects([\"All\"]);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n    fetchTasks();\r\n\r\n    const timer = setInterval(() => setTodayStr(todayIso()), 60_000);\r\n    return () => clearInterval(timer);\r\n  }, [username, userId]);\r\n\r\n  // Derived values\r\n  const counts = useMemo(() => {\r\n    const total = tasks.length;\r\n    const completed = tasks.filter((t) => t.completed).length;\r\n    const pending = total - completed;\r\n    return { total, completed, pending };\r\n  }, [tasks]);\r\n\r\n  const dueToday = useMemo(\r\n    () => tasks.filter((t) => t.deadline === todayStr && !t.completed),\r\n    [tasks, todayStr]\r\n  );\r\n  const overdue = useMemo(\r\n    () => tasks.filter((t) => t.deadline < todayStr && !t.completed),\r\n    [tasks, todayStr]\r\n  );\r\n  const upcoming7 = useMemo(() => {\r\n    const now = new Date(todayStr);\r\n    const end = new Date(now);\r\n    end.setDate(end.getDate() + 7);\r\n    return tasks.filter((t) => {\r\n      const dd = new Date(t.deadline);\r\n      return dd >= now && dd <= end && !t.completed && t.deadline !== todayStr;\r\n    });\r\n  }, [tasks, todayStr]);\r\n\r\n  // Notifications generation\r\n  useEffect(() => {\r\n    const nots = [];\r\n    tasks.forEach((t) => {\r\n      if (!t.completed) {\r\n        const d = new Date(t.deadline);\r\n        const diff = (d - new Date(todayStr)) / (1000 * 60 * 60 * 24);\r\n        if (diff < 0)\r\n          nots.push({\r\n            id: `ov-${t._id}`,\r\n            msg: `Overdue: ${t.title}`,\r\n            taskId: t._id,\r\n            level: \"overdue\",\r\n          });\r\n        else if (diff <= 2)\r\n          nots.push({\r\n            id: `up-${t._id}`,\r\n            msg: `Due soon: ${t.title} (${t.deadline})`,\r\n            taskId: t._id,\r\n            level: \"soon\",\r\n          });\r\n      }\r\n    });\r\n    setNotifications(nots);\r\n  }, [tasks, todayStr]);\r\n\r\n  // Filtering / Searching / Sorting\r\n  const visibleTasks = useMemo(() => {\r\n    let list = tasks.slice();\r\n\r\n    if (filterProject && filterProject !== \"All\")\r\n      list = list.filter((t) => t.project === filterProject);\r\n    if (filterPriority && filterPriority !== \"All\")\r\n      list = list.filter((t) => t.priority === filterPriority);\r\n    if (showOnly === \"overdue\")\r\n      list = list.filter((t) => t.deadline < todayStr && !t.completed);\r\n    if (showOnly === \"dueToday\")\r\n      list = list.filter((t) => t.deadline === todayStr);\r\n    if (showOnly === \"upcoming7\") {\r\n      const now = new Date(todayStr);\r\n      const end = new Date(now);\r\n      end.setDate(end.getDate() + 7);\r\n      list = list.filter((t) => {\r\n        const dd = new Date(t.deadline);\r\n        return dd >= now && dd <= end;\r\n      });\r\n    }\r\n    if (query && query.trim()) {\r\n      const q = query.toLowerCase();\r\n      list = list.filter(\r\n        (t) =>\r\n          t.title.toLowerCase().includes(q) ||\r\n          (t.description || \"\").toLowerCase().includes(q) ||\r\n          (t.tags || []).join(\" \").toLowerCase().includes(q)\r\n      );\r\n    }\r\n\r\n    // sort\r\n    if (sortBy === \"deadline\") {\r\n      list.sort((a, b) => (a.deadline || \"\").localeCompare(b.deadline || \"\"));\r\n    } else if (sortBy === \"priority\") {\r\n      list.sort((a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]);\r\n    } else if (sortBy === \"created\") {\r\n      list.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    }\r\n\r\n    return list;\r\n  }, [tasks, filterProject, filterPriority, sortBy, showOnly, query, todayStr]);\r\n\r\n  // Action handlers\r\n  const toggleComplete = async (id) => {\r\n    try {\r\n      const task = tasks.find((t) => t._id === id);\r\n      const updated = { ...task, completed: !task.completed };\r\n      await axios.put(`http://localhost:5000/api/tasks/${id}`, updated);\r\n      setTasks((prev) =>\r\n        prev.map((t) => (t._id === id ? { ...t, completed: !t.completed } : t))\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error toggling complete:\", err);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/tasks/${id}`);\r\n      setTasks((prev) => prev.filter((t) => t._id !== id));\r\n    } catch (err) {\r\n      console.error(\"Error deleting task:\", err);\r\n    }\r\n  };\r\n\r\n  const updateTask = async (id, patch) => {\r\n    try {\r\n      const res = await axios.put(\r\n        `http://localhost:5000/api/tasks/${id}`,\r\n        patch\r\n      );\r\n      setTasks((prev) =>\r\n        prev.map((t) => (t._id === id ? { ...t, ...res.data } : t))\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error updating task:\", err);\r\n    }\r\n  };\r\n\r\n  const addTask = async () => {\r\n    if (!quickAddTitle.trim()) return;\r\n    try {\r\n      const newTask = {\r\n        title: quickAddTitle,\r\n        description: \"\",\r\n        deadline: quickAddDeadline || null,\r\n        priority: quickAddPriority,\r\n        tags: [],\r\n        project: quickAddProject || \"General\",\r\n        completed: false,\r\n        userId, // important\r\n      };\r\n      const res = await axios.post(\"http://localhost:5000/api/tasks\", newTask);\r\n      setTasks((prev) => [res.data, ...prev]);\r\n      if (quickAddProject && !projects.includes(quickAddProject))\r\n        setProjects((prev) => [...prev, quickAddProject]);\r\n      setQuickAddTitle(\"\");\r\n      setQuickAddDeadline(\"\");\r\n      setQuickAddPriority(\"Medium\");\r\n      setQuickAddProject(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error adding task:\", err);\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpanded((prev) => {\r\n      const copy = new Set(prev);\r\n      if (copy.has(id)) copy.delete(id);\r\n      else copy.add(id);\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const snoozeNotification = (nid, days = 1) => {\r\n    const not = notifications.find((n) => n.id === nid);\r\n    if (!not) return;\r\n    const tId = not.taskId;\r\n    updateTask(tId, {\r\n      deadline: new Date(\r\n        new Date(tasks.find((t) => t._id === tId).deadline || todayStr).setDate(\r\n          new Date(tasks.find((t) => t._id === tId).deadline || todayStr).getDate() + days\r\n        )\r\n      )\r\n        .toISOString()\r\n        .slice(0, 10),\r\n    });\r\n    setNotifications((prev) => prev.filter((n) => n.id !== nid));\r\n  };\r\n\r\n  const dismissNotification = (nid) =>\r\n    setNotifications((prev) => prev.filter((n) => n.id !== nid));\r\n\r\n  const progressPercent = counts.total\r\n    ? Math.round((counts.completed / counts.total) * 100)\r\n    : 0;\r\n\r\n  return (\r\n    <div className=\"dash-wrap\">\r\n      {/* ... keep the entire JSX structure from your version ... */}\r\n      {/* Only the data-handling logic was changed above */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}