{"ast":null,"code":"import _objectSpread from\"D:/To-Do-List-App/todo-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import'../styles/SignUp.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function SignUp(){const[formData,setFormData]=useState({name:\"\",email:\"\",mobile:\"\",password:\"\",confirmPassword:\"\"});const[errors,setErrors]=useState({});const[loading,setLoading]=useState(false);const handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));};const validateForm=()=>{const newErrors={};if(!formData.name.trim())newErrors.name=\"Name is required\";if(!formData.email.trim()){newErrors.email=\"Email is required\";}else if(!formData.email.endsWith(\"@gmail.com\")){newErrors.email=\"Email must end with @gmail.com\";}if(!formData.mobile.trim()){newErrors.mobile=\"Mobile number is required\";}else if(!/^\\d{10}$/.test(formData.mobile)){newErrors.mobile=\"Mobile number must be 10 digits\";}const password=formData.password;if(!password){newErrors.password=\"Password is required\";}else if(password.length<8||!/[A-Z]/.test(password)||!/\\d/.test(password)||!/[!@#$%^&*(),.?\":{}|<>]/.test(password)){newErrors.password=\"Password must be at least 8 characters long, include 1 uppercase letter, 1 digit, and 1 special character\";}if(!formData.confirmPassword){newErrors.confirmPassword=\"Please confirm your password\";}else if(formData.password!==formData.confirmPassword){newErrors.confirmPassword=\"Passwords do not match\";}return newErrors;};const handleSubmit=async e=>{e.preventDefault();const validationErrors=validateForm();if(Object.keys(validationErrors).length>0){setErrors(validationErrors);return;}setErrors({});setLoading(true);try{const res=await fetch(\"http://localhost:5000/signup\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)});const data=await res.json();if(res.ok){alert(\"Signup successful!\");console.log(\"Saved user:\",data);}else{alert(data.message||\"Something went wrong\");}}catch(err){console.error(err);alert(\"Error connecting to server\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"background-blur\"}),\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"top-right-links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/home\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/signin\",children:\"Signin\"}),/*#__PURE__*/_jsx(Link,{to:\"/contact\",children:\"Contact\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"signup-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"signup-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create an Account\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange}),errors.name&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.name}),/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange}),errors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.email}),/*#__PURE__*/_jsx(\"label\",{children:\"Mobile Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"mobile\",value:formData.mobile,onChange:handleChange}),errors.mobile&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.mobile}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange}),errors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.password}),/*#__PURE__*/_jsx(\"label\",{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.confirmPassword}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?\"Signing Up...\":\"Sign Up\"})]})})]});}","map":{"version":3,"names":["React","useState","Link","jsx","_jsx","jsxs","_jsxs","SignUp","formData","setFormData","name","email","mobile","password","confirmPassword","errors","setErrors","loading","setLoading","handleChange","e","_objectSpread","target","value","validateForm","newErrors","trim","endsWith","test","length","handleSubmit","preventDefault","validationErrors","Object","keys","res","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","console","log","message","err","error","className","children","to","onSubmit","type","onChange","disabled"],"sources":["D:/To-Do-List-App/todo-app/frontend/src/pages/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../styles/SignUp.css'; \r\n\r\nexport default function SignUp() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name.trim()) newErrors.name = \"Name is required\";\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = \"Email is required\";\r\n    } else if (!formData.email.endsWith(\"@gmail.com\")) {\r\n      newErrors.email = \"Email must end with @gmail.com\";\r\n    }\r\n    if (!formData.mobile.trim()) {\r\n      newErrors.mobile = \"Mobile number is required\";\r\n    } else if (!/^\\d{10}$/.test(formData.mobile)) {\r\n      newErrors.mobile = \"Mobile number must be 10 digits\";\r\n    }\r\n    const password = formData.password;\r\n    if (!password) {\r\n      newErrors.password = \"Password is required\";\r\n    } else if (\r\n      password.length < 8 ||\r\n      !/[A-Z]/.test(password) ||\r\n      !/\\d/.test(password) ||\r\n      !/[!@#$%^&*(),.?\":{}|<>]/.test(password)\r\n    ) {\r\n      newErrors.password = \"Password must be at least 8 characters long, include 1 uppercase letter, 1 digit, and 1 special character\";\r\n    }\r\n    if (!formData.confirmPassword) {\r\n      newErrors.confirmPassword = \"Please confirm your password\";\r\n    } else if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    setErrors({});\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/signup\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        alert(\"Signup successful!\");\r\n        console.log(\"Saved user:\", data);\r\n      } else {\r\n        alert(data.message || \"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error connecting to server\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div className=\"signup-page\">\r\n    <div className=\"background-blur\"></div> {}\r\n    \r\n    <div className=\"top-right-links\">\r\n        <Link to=\"/home\">Home</Link>\r\n        <Link to=\"/signin\">Signin</Link>\r\n        <Link to=\"/contact\">Contact</Link>\r\n      </div>\r\n\r\n    <div className=\"signup-container\">\r\n      <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n        <h2>Create an Account</h2>\r\n\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n        {errors.name && <p className=\"error\">{errors.name}</p>}\r\n\r\n        <label>Email</label>\r\n        <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n        {errors.email && <p className=\"error\">{errors.email}</p>}\r\n\r\n        <label>Mobile Number</label>\r\n        <input type=\"text\" name=\"mobile\" value={formData.mobile} onChange={handleChange} />\r\n        {errors.mobile && <p className=\"error\">{errors.mobile}</p>}\r\n\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n        {errors.password && <p className=\"error\">{errors.password}</p>}\r\n\r\n        <label>Confirm Password</label>\r\n        <input type=\"password\" name=\"confirmPassword\" value={formData.confirmPassword} onChange={handleChange} />\r\n        {errors.confirmPassword && <p className=\"error\">{errors.confirmPassword}</p>}\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Signing Up...\" : \"Sign Up\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}